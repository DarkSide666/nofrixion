<?php
/**
 * PayrunsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Nofrixion\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * NoFrixion MoneyMoov API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Nofrixion\Client\Test\Api;

use \Nofrixion\Client\Configuration;
use \Nofrixion\Client\ApiException;
use \Nofrixion\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PayrunsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Nofrixion\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PayrunsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for archivePayrun
     *
     * Archives a pay run, excluding it from most actions..
     *
     */
    public function testArchivePayrun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cancelPayrun
     *
     * Cancels the schedule of a pay run and delete's all it's payouts..
     *
     */
    public function testCancelPayrun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPayrun
     *
     * Create a new Payrun from a list of invoices..
     *
     */
    public function testCreatePayrun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deletePayrun
     *
     * Deletes a pay run, along with its invoices, if it's in a Draft state..
     *
     */
    public function testDeletePayrun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPayrun
     *
     * Gets a single payrun..
     *
     */
    public function testGetPayrun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPayrunsPaged
     *
     * Gets all payruns for a merchant..
     *
     */
    public function testGetPayrunsPaged()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rejectPayrun
     *
     * Rejects a payrun..
     *
     */
    public function testRejectPayrun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for requestPayrunAuthorisation
     *
     * Request authorisation from authorisers for this payrun..
     *
     */
    public function testRequestPayrunAuthorisation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitPayrun
     *
     * Submits a payrun for processing..
     *
     */
    public function testSubmitPayrun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for unarchivePayrun
     *
     * Restores an archived pay run, making it retrievable from most actions..
     *
     */
    public function testUnarchivePayrun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePayrun
     *
     * Updates a payrun..
     *
     */
    public function testUpdatePayrun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
