<?php
/**
 * PayoutsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Nofrixion\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * NoFrixion MoneyMoov API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.8.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Nofrixion\Client\Test\Api;

use \Nofrixion\Client\Configuration;
use \Nofrixion\Client\ApiException;
use \Nofrixion\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PayoutsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Nofrixion\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PayoutsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for apiV1PayoutsBatchIdGet
     *
     * Gets a list of all the payouts contained in a batch..
     *
     */
    public function testApiV1PayoutsBatchIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1PayoutsBatchPost
     *
     * Creates a new batch payout..
     *
     */
    public function testApiV1PayoutsBatchPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1PayoutsBatchSubmitIdPost
     *
     * Submits a batch payout for processing..
     *
     */
    public function testApiV1PayoutsBatchSubmitIdPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1PayoutsBatchcreatePost
     *
     * Creates payouts..
     *
     */
    public function testApiV1PayoutsBatchcreatePost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1PayoutsBatchdeleteDelete
     *
     * Deletes a list of payout records..
     *
     */
    public function testApiV1PayoutsBatchdeleteDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1PayoutsCancelIdPut
     *
     * Attempts to cancel a scheduled payout..
     *
     */
    public function testApiV1PayoutsCancelIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1PayoutsGet
     *
     * Gets a list of all payouts for a specific merchant..
     *
     */
    public function testApiV1PayoutsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1PayoutsGetbyinvoiceidInvoiceIDGet
     *
     * Gets a payout by its invoice ID..
     *
     */
    public function testApiV1PayoutsGetbyinvoiceidInvoiceIDGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1PayoutsIdDelete
     *
     * Deletes a payout record..
     *
     */
    public function testApiV1PayoutsIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1PayoutsIdGet
     *
     * Gets a single payout..
     *
     */
    public function testApiV1PayoutsIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1PayoutsIdPut
     *
     * Updates a payout record..
     *
     */
    public function testApiV1PayoutsIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1PayoutsMetricsGet
     *
     * Gets a list of all payouts for a specific merchant..
     *
     */
    public function testApiV1PayoutsMetricsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1PayoutsPost
     *
     * Creates a new payout..
     *
     */
    public function testApiV1PayoutsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1PayoutsRejectIdPut
     *
     * Rejects the authorisation for a payout..
     *
     */
    public function testApiV1PayoutsRejectIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1PayoutsSendPost
     *
     * Creates and submits a payout for a trusted caller..
     *
     */
    public function testApiV1PayoutsSendPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1PayoutsStatusIdGet
     *
     * Gets a single payout status from..
     *
     */
    public function testApiV1PayoutsStatusIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1PayoutsSubmitIdPost
     *
     * Submits a payout for processing..
     *
     */
    public function testApiV1PayoutsSubmitIdPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
