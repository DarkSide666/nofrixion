<?php
/**
 * PaymentRequestsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Nofrixion\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * NoFrixion MoneyMoov API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Nofrixion\Client\Test\Api;

use \Nofrixion\Client\Configuration;
use \Nofrixion\Client\ApiException;
use \Nofrixion\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PaymentRequestsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Nofrixion\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PaymentRequestsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for captureCardPayment
     *
     * Submits a request to capture a previously authorised card payment..
     *
     */
    public function testCaptureCardPayment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createAndPayPaymentRequest
     *
     * Creates a payment request record and processes the payment..
     *
     */
    public function testCreateAndPayPaymentRequest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPaymentRequest
     *
     * Creates a payment request record..
     *
     */
    public function testCreatePaymentRequest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAllTokenisedCards
     *
     * Deletes all the card tokens for a customer..
     *
     */
    public function testDeleteAllTokenisedCards()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAllTokenisedCardsForMerchant
     *
     * Deletes all the card tokens for a customer..
     *
     */
    public function testDeleteAllTokenisedCardsForMerchant()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deletePaymentRequest
     *
     * Deletes a payment request, along with its keys and addresses, if there's  no payment event associated with it..
     *
     */
    public function testDeletePaymentRequest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteTokenisedCard
     *
     * Deletes a single card token..
     *
     */
    public function testDeleteTokenisedCard()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAllPaymentRequestsPaged
     *
     * Gets a list of all payment requests..
     *
     */
    public function testGetAllPaymentRequestsPaged()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDirectDebitForm
     *
     * Serves a form to initiate a direct debit payment..
     *
     */
    public function testGetDirectDebitForm()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getLightningInvoice
     *
     * Gets a Bitcoin Lightning invoice for a payment request..
     *
     */
    public function testGetLightningInvoice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPaymentRequest
     *
     * Gets a payment request..
     *
     */
    public function testGetPaymentRequest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPaymentRequestEvents
     *
     * Gets a payment requests's events..
     *
     */
    public function testGetPaymentRequestEvents()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPaymentRequestForOrder
     *
     * Gets a payment request by its order ID..
     *
     */
    public function testGetPaymentRequestForOrder()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPaymentRequestMetricsForMerchant
     *
     * Gets payment request metrics of a merchant..
     *
     */
    public function testGetPaymentRequestMetricsForMerchant()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPaymentRequestMinimal
     *
     * Gets a minimal representation of a payment request..
     *
     */
    public function testGetPaymentRequestMinimal()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPaymentRequestResult
     *
     * Gets a payment request result..
     *
     */
    public function testGetPaymentRequestResult()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPublicKeyForCardPayment
     *
     * Gets the public key to encrypt card details with when submitting an authorisation..
     *
     */
    public function testGetPublicKeyForCardPayment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTokenisedCards
     *
     * Gets a list of the tokenised cards stored for a single customer..
     *
     */
    public function testGetTokenisedCards()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTokenisedCardsForMerchant
     *
     * Gets a list of the tokenised cards stored for a single customer..
     *
     */
    public function testGetTokenisedCardsForMerchant()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for refundCardPayment
     *
     * Submits a request to refund a card payment..
     *
     */
    public function testRefundCardPayment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setupCardPayerAuthentication
     *
     * Set up payer authentication for a card payment..
     *
     */
    public function testSetupCardPayerAuthentication()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for simulatePayByBankCallback
     *
     * This action simulates a payment initiation callback from a bank to authorise a payment in a sandbox environment..
     *
     */
    public function testSimulatePayByBankCallback()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitCardPayment
     *
     * Submit a payment authorisation request to the card gateway..
     *
     */
    public function testSubmitCardPayment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitDirectDebit
     *
     * Processes information submitted through the direct debit payment form..
     *
     */
    public function testSubmitDirectDebit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitDirectDebitForMandate
     *
     * Submits a Direct Debit payment attempt..
     *
     */
    public function testSubmitDirectDebitForMandate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitPayByBank
     *
     * Submits a payment initiation request..
     *
     */
    public function testSubmitPayByBank()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitTokenisedCardPayment
     *
     * Submits a payment request, using a tokenised card, to a payment gateway..
     *
     */
    public function testSubmitTokenisedCardPayment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePaymentRequest
     *
     * Updates a payment request..
     *
     */
    public function testUpdatePaymentRequest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for voidAllCardPayments
     *
     * Submits a request to void all payments for a payment request..
     *
     */
    public function testVoidAllCardPayments()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for voidCardPayment
     *
     * Submits a request to void a card payment..
     *
     */
    public function testVoidCardPayment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
