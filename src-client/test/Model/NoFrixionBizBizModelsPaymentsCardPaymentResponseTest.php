<?php
/**
 * NoFrixionBizBizModelsPaymentsCardPaymentResponseTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Nofrixion\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * NoFrixion MoneyMoov API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.8.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Nofrixion\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * NoFrixionBizBizModelsPaymentsCardPaymentResponseTest Class Doc Comment
 *
 * @category    Class
 * @description NoFrixionBizBizModelsPaymentsCardPaymentResponse
 * @package     Nofrixion\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class NoFrixionBizBizModelsPaymentsCardPaymentResponseTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "NoFrixionBizBizModelsPaymentsCardPaymentResponse"
     */
    public function testNoFrixionBizBizModelsPaymentsCardPaymentResponse()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authorized_amount"
     */
    public function testPropertyAuthorizedAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "currency_code"
     */
    public function testPropertyCurrencyCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "response_code"
     */
    public function testPropertyResponseCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "request_id"
     */
    public function testPropertyRequestId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transaction_id"
     */
    public function testPropertyTransactionId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_payer_authentication_required"
     */
    public function testPropertyIsPayerAuthenticationRequired()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_soft_decline"
     */
    public function testPropertyIsSoftDecline()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payer_authentication_url"
     */
    public function testPropertyPayerAuthenticationUrl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payer_authentication_access_token"
     */
    public function testPropertyPayerAuthenticationAccessToken()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payer_authentication_window_width"
     */
    public function testPropertyPayerAuthenticationWindowWidth()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payer_authentication_window_height"
     */
    public function testPropertyPayerAuthenticationWindowHeight()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payer_authentication_merchant_data"
     */
    public function testPropertyPayerAuthenticationMerchantData()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_request_callback_url"
     */
    public function testPropertyPaymentRequestCallbackUrl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "three_ds_redirect_url"
     */
    public function testPropertyThreeDsRedirectUrl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_request_id"
     */
    public function testPropertyPaymentRequestId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "response_type"
     */
    public function testPropertyResponseType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
