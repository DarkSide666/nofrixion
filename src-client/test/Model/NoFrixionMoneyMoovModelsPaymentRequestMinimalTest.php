<?php
/**
 * NoFrixionMoneyMoovModelsPaymentRequestMinimalTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Nofrixion\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * NoFrixion MoneyMoov API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.8.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Nofrixion\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * NoFrixionMoneyMoovModelsPaymentRequestMinimalTest Class Doc Comment
 *
 * @category    Class
 * @description NoFrixionMoneyMoovModelsPaymentRequestMinimal
 * @package     Nofrixion\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class NoFrixionMoneyMoovModelsPaymentRequestMinimalTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "NoFrixionMoneyMoovModelsPaymentRequestMinimal"
     */
    public function testNoFrixionMoneyMoovModelsPaymentRequestMinimal()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "merchant_id"
     */
    public function testPropertyMerchantId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "merchant_name"
     */
    public function testPropertyMerchantName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "merchant_short_name"
     */
    public function testPropertyMerchantShortName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "amount"
     */
    public function testPropertyAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "currency"
     */
    public function testPropertyCurrency()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "title"
     */
    public function testPropertyTitle()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_processor"
     */
    public function testPropertyPaymentProcessor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_processor_key"
     */
    public function testPropertyPaymentProcessorKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "callback_url"
     */
    public function testPropertyCallbackUrl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "card_stripe_payment_intent_secret"
     */
    public function testPropertyCardStripePaymentIntentSecret()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "jwk"
     */
    public function testPropertyJwk()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_methods"
     */
    public function testPropertyPaymentMethods()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pisp_error"
     */
    public function testPropertyPispError()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "priority_bank_id"
     */
    public function testPropertyPriorityBankId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "google_pay_merchant_id"
     */
    public function testPropertyGooglePayMerchantId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_attempts"
     */
    public function testPropertyPaymentAttempts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "partial_payment_method"
     */
    public function testPropertyPartialPaymentMethod()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "stripe_account_id"
     */
    public function testPropertyStripeAccountId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lightning_invoice"
     */
    public function testPropertyLightningInvoice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lightning_invoice_expires_at"
     */
    public function testPropertyLightningInvoiceExpiresAt()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
